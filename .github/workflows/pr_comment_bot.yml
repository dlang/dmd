name: PR Comment Bot

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  comment:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up D programming language
        uses: dlang-community/setup-dlang@v1.3.0
        with:
          compiler: dmd-latest

      - name: Set up environment
        run: |
          echo "N=$(nproc)" >> $GITHUB_ENV
          echo "HOST_DMD=dmd" >> $GITHUB_ENV
          echo "MODEL=64" >> $GITHUB_ENV

      - name: Install dependencies
        run: sudo apt-get install -y build-essential

      - name: Build project
        run: |
          start_time=$(date +%s)
          /usr/bin/time -v make -j$N MODEL=$MODEL HOST_DMD=$HOST_DMD
          end_time=$(date +%s)
          runtime=$((end_time - start_time))
          echo "RUNTIME=$runtime" >> $GITHUB_ENV

      - name: Get RAM usage
        run: |
          ram_usage=$(free -m | awk '/Mem:/ {print $3}')
          echo "RAM_USAGE=$ram_usage" >> $GITHUB_ENV

      - name: Generate build statistics
        run: |
          echo "### ✅ Build Statistics" > NEW_OUTPUT.txt
          echo "**Execution Time:** \`$RUNTIME\` seconds" >> NEW_OUTPUT.txt
          echo "**RAM Usage:** \`$RAM_USAGE\` MB" >> NEW_OUTPUT.txt
          echo "" >> NEW_OUTPUT.txt
          ./scripts/ci/summary_comment.sh >> NEW_OUTPUT.txt

      - name: Generate comment diff
        run: |
          echo "### 🔍 Build Statistics Diff" > comment.txt
          echo "**Execution Time:** \`$RUNTIME\` seconds" >> comment.txt
          echo "**RAM Usage:** \`$RAM_USAGE\` MB" >> comment.txt
          echo "" >> comment.txt
          ./scripts/ci/summary_comment_diff.sh OLD_OUTPUT.txt NEW_OUTPUT.txt >> comment.txt

      - name: "Debug: Check comment.txt contents"
        run: cat comment.txt || echo "comment.txt is empty"

      - name: Post Comment on PR
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const fs = require('fs');
            const path = 'comment.txt';

            // Ensure comment file exists and is not empty
            if (!fs.existsSync(path) || fs.statSync(path).size === 0) {
              console.log("No comment generated, skipping PR comment.");
              return;
            }

            const comment = fs.readFileSync(path, 'utf8').trim();
            if (!comment) {
              console.log("Comment is empty, skipping PR comment.");
              return;
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
